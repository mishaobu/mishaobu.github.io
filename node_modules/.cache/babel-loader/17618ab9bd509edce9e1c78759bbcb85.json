{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flast\\\\OneDrive\\\\Desktop\\\\mishaobu com\\\\mishaobu.github.io\\\\src\\\\components\\\\MoviePage.js\";\nimport React, { Component } from 'react';\nimport MovieBlock from \"./MovieBlock\";\nimport MovieOptions from \"./MovieOptions\"; // import Navbar from 'react-bootstrap/Navbar';\n// import Form from 'react-bootstrap/Form';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\n// import Nav from 'react-bootstrap/Nav';\n// import Button from 'react-bootstrap/Button';\n// import FormControl from 'react-bootstrap/FormControl';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport config from \"../config\";\nimport \"./FeedbackPage.css\";\n\nconst firebase = require(\"firebase\"); // API Key:\n//http://www.omdbapi.com/?apikey=3f1dca30&i=tt3896198\n\n\nexport default class MoviePage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      lists: [],\n      activeList: \"All Movies\",\n      showLists: false,\n      search: \"\",\n      activeFilter: false,\n      filteredMovies: []\n    };\n    this.handleListSelect = this.handleListSelect.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n\n  handleListSelect(e) {\n    this.setState({\n      activeList: e.target.value\n    });\n    firebase.database().ref(\"lists/\" + e.target.value).once('value').then(snapshot => {\n      for (let item in snapshot.val()) {//console.log(item);\n      }\n    });\n    firebase.database().ref(\"movieid\").once('value').then(snapshot => {//console.log(snapshot.val()['tt8579674']);\n    });\n  }\n\n  handleSearchChange(e) {\n    this.setState({\n      search: e.target.value\n    });\n\n    if (e.target.value !== \"\") {\n      this.state.activeFilter = true;\n    } else {\n      this.state.activeFilter = false;\n    }\n\n    let filteredMovies = [];\n\n    for (let i in this.state.movies) {\n      if (this.state.movies[i] && this.state.movies[i].Title.toLowerCase().includes(e.target.value)) {\n        filteredMovies.push(this.state.movies[i]);\n      }\n    }\n\n    this.setState({\n      filteredMovies: filteredMovies\n    }); //console.log(this.state.lists);\n  }\n\n  componentDidMount() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    let ref; //firebase.database().ref(\"lists/Seen/\" + \"tt8579674\").set(\"tt8579674\");\n    //if (this.state.activeList === \"All Movies\") {\n\n    ref = firebase.database().ref(\"movieid\"); // } else {\n    //     ref = firebase.database().ref(\"lists/\" + this.state.activeList) ;\n    // }\n\n    ref.on(\"value\", snapshot => {\n      let newState = [];\n      const data = snapshot.val();\n\n      for (let item in data) {\n        newState.push(data[item]);\n      }\n\n      this.setState({\n        movies: newState\n      });\n    });\n    let ref2 = firebase.database().ref(\"lists\");\n    ref2.on(\"value\", snapshot => {\n      let newState = [\"All movies\"];\n      const data = snapshot.val(); // for (let item in data) {\n      //   console.log(data[item], data, data.key);\n      //   newState.push(data[item]);\n      // }\n\n      Object.keys(data).forEach(function (key) {\n        //console.log(key);\n        newState.push(key);\n      });\n      this.setState({\n        lists: newState\n      });\n    });\n  }\n\n  render() {\n    if (this.state.activeFilter === false) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movieBlockDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, \" Search \"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"movieSearch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"search\",\n        onChange: this.handleSearchChange,\n        value: this.state.search,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.handleListSelect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, this.state.lists.map((list, index) => /*#__PURE__*/React.createElement(\"option\", {\n        value: list,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 60\n        }\n      }, \" \", list, \" \"))), /*#__PURE__*/React.createElement(MovieOptions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }), this.state.movies.map((movieJSON, index) => /*#__PURE__*/React.createElement(MovieBlock, {\n        key: index,\n        json: movieJSON,\n        lists: this.state.lists,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      })), \";\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movieBlockDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, \" Search Filter On \"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"movieSearch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"search\",\n        onChange: this.handleSearchChange,\n        value: this.state.search,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.handleListSelect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, this.state.lists.map((list, index) => /*#__PURE__*/React.createElement(\"option\", {\n        value: list,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 60\n        }\n      }, \" \", list, \" \"))), /*#__PURE__*/React.createElement(MovieOptions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }), this.state.filteredMovies.map((movieJSON, index) => /*#__PURE__*/React.createElement(MovieBlock, {\n        key: index,\n        json: movieJSON,\n        lists: this.state.lists,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      })), \";\");\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/flast/OneDrive/Desktop/mishaobu com/mishaobu.github.io/src/components/MoviePage.js"],"names":["React","Component","MovieBlock","MovieOptions","config","firebase","require","MoviePage","constructor","state","movies","lists","activeList","showLists","search","activeFilter","filteredMovies","handleListSelect","bind","handleSearchChange","e","setState","target","value","database","ref","once","then","snapshot","item","val","i","Title","toLowerCase","includes","push","componentDidMount","apps","length","initializeApp","on","newState","data","ref2","Object","keys","forEach","key","render","map","list","index","movieJSON"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MovieBlock from \"./MovieBlock\";\r\nimport MovieOptions from \"./MovieOptions\";\r\n\r\n// import Navbar from 'react-bootstrap/Navbar';\r\n// import Form from 'react-bootstrap/Form';\r\n// import NavDropdown from 'react-bootstrap/NavDropdown';\r\n// import Nav from 'react-bootstrap/Nav';\r\n// import Button from 'react-bootstrap/Button';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\n\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nimport config from \"../config\";\r\nimport \"./FeedbackPage.css\"\r\nconst firebase = require(\"firebase\");\r\n\r\n// API Key:\r\n//http://www.omdbapi.com/?apikey=3f1dca30&i=tt3896198\r\n\r\nexport default class MoviePage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            movies: [],\r\n            lists: [],\r\n            activeList: \"All Movies\",\r\n            showLists: false,\r\n            search: \"\",\r\n            activeFilter: false,\r\n            filteredMovies: [],\r\n        }\r\n        this.handleListSelect = this.handleListSelect.bind(this);\r\n        this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    }\r\n\r\n    handleListSelect(e) {\r\n        this.setState({\r\n            activeList: e.target.value\r\n        });\r\n        firebase.database().ref(\"lists/\" + e.target.value).once('value').then((snapshot) => {\r\n            for (let item in snapshot.val()) {\r\n                //console.log(item);\r\n            }\r\n        })\r\n        firebase.database().ref(\"movieid\").once('value').then((snapshot) => {\r\n            //console.log(snapshot.val()['tt8579674']);\r\n        })\r\n    }\r\n\r\n    handleSearchChange(e) {\r\n        this.setState({\r\n            search: e.target.value\r\n        });\r\n        if (e.target.value !== \"\") {\r\n             this.state.activeFilter = true;\r\n        }\r\n        else {\r\n            this.state.activeFilter = false;\r\n        }\r\n        let filteredMovies = []\r\n        for (let i in this.state.movies) {\r\n            if (this.state.movies[i] && this.state.movies[i].Title.toLowerCase().includes(e.target.value)) {\r\n                filteredMovies.push(this.state.movies[i]);\r\n            }\r\n        }\r\n        this.setState({\r\n            filteredMovies: filteredMovies\r\n        });\r\n        //console.log(this.state.lists);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n         } \r\n         let ref;\r\n\r\n        //firebase.database().ref(\"lists/Seen/\" + \"tt8579674\").set(\"tt8579674\");\r\n\r\n        //if (this.state.activeList === \"All Movies\") {\r\n            ref = firebase.database().ref(\"movieid\");\r\n        // } else {\r\n        //     ref = firebase.database().ref(\"lists/\" + this.state.activeList) ;\r\n        // }\r\n          ref.on(\"value\", (snapshot) => {\r\n            let newState = [];\r\n            const data = snapshot.val();\r\n            for (let item in data) {\r\n              newState.push(\r\n                data[item]\r\n              );\r\n            }\r\n            this.setState({\r\n              movies: newState,\r\n            });\r\n          });\r\n\r\n          let ref2 = firebase.database().ref(\"lists\");\r\n          ref2.on(\"value\", (snapshot) => {\r\n            let newState = [\"All movies\"];\r\n            const data = snapshot.val();\r\n            // for (let item in data) {\r\n            //   console.log(data[item], data, data.key);\r\n            //   newState.push(data[item]);\r\n            // }\r\n            Object.keys(data).forEach(function(key) {\r\n                //console.log(key);\r\n                newState.push(key);\r\n            });\r\n            this.setState({\r\n              lists: newState,\r\n            });\r\n          });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.activeFilter === false) {\r\n            return(\r\n            <div className = \"movieBlockDiv\">\r\n                <h1> Search </h1>\r\n                    <form className = \"movieSearch\">\r\n                        <input type = \"text\" name = \"search\"\r\n                            onChange= {this.handleSearchChange}\r\n                            value = {this.state.search}\r\n                        />\r\n                    </form>\r\n                <select onChange = {this.handleListSelect}>\r\n                    {this.state.lists.map((list, index) => <option value = {list}> {list} </option>)}\r\n                </select>\r\n\r\n                <MovieOptions />\r\n                {this.state.movies.map((movieJSON, index) => (\r\n                <MovieBlock key={index} json={movieJSON} lists = {this.state.lists}/>\r\n            ))};\r\n            </div>\r\n            )\r\n        } else {\r\n            return (\r\n            <div className = \"movieBlockDiv\">\r\n                <h1> Search Filter On </h1>\r\n                <form className = \"movieSearch\">\r\n                    <input type = \"text\" name = \"search\"\r\n                        onChange= {this.handleSearchChange}\r\n                        value = {this.state.search}\r\n                    />\r\n                </form>\r\n\r\n                <select onChange = {this.handleListSelect}>\r\n                    {this.state.lists.map((list, index) => <option value = {list}> {list} </option>)}\r\n                </select>\r\n\r\n                <MovieOptions />\r\n                {this.state.filteredMovies.map((movieJSON, index) => (\r\n                <MovieBlock key={index} json={movieJSON} lists = {this.state.lists}/>\r\n            ))};\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}