{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flast\\\\OneDrive\\\\Desktop\\\\mishaobu com\\\\mishaobu.github.io\\\\src\\\\components\\\\FeedbackPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport config from './config.js';\n\nconst firebase = require('firebase'); //firebase.initializeApp(config)\n\n\nlet jsonBody = {\n  value1: \"1\",\n  value2: \"2\"\n}; // let leftBox = {\n//     position: 'absolute',\n//     marginLeft: '3%',\n//     width: '60%',\n//     border: '2px solid green'\n// }\n// const rightBox = {\n//     position: 'absolute',\n//     marginLeft: '68%',\n//     width: '29%',\n//     border: '2px solid blue'\n// }\n\nfunction FeedbackPage() {\n  const [data, setData] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [des, setDes] = useState(\"\");\n  const [shouldRender, setShouldRender] = useState(true);\n  const sample = ['hi', 'hello', 'hey'];\n  jsonBody = {\n    data: \"1\",\n    data: \"2\"\n  };\n\n  const submitFunc = () => {\n    console.log(\"Clicked\");\n    firebase.database().ref('messages').push().set({\n      \"name\": name,\n      \"des\": des\n    });\n    setName(\"\");\n    setDes(\"\");\n    alert(\"Your Question/Comment has been received. Thank you for checking out my webpage!\");\n  }; //firebase.initializeApp(config)\n\n\n  useEffect(() => {\n    console.log(firebase.apps.length);\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    } //get a reference to the database\n\n\n    let ref = firebase.database().ref('data'); //retrieve its data\n\n    ref.on('value', snapshot => {\n      console.log(\"Inside on\"); //this is your call back function\n      //state will be a JSON object after this\n      //set your apps state to contain this data however you like\n\n      const state = snapshot.val(); //since i use react 16, i set my state like this\n      //i have previously declared a state variable like this: const [data, setData] = useState([]) so that I can make the below call\n\n      setData(state);\n    });\n  }, [shouldRender]); // do this where we submit the form: setShouldRender(!shouldRender)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Submit Feedback\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, data), sample.map((s, index) => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, s)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitFunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"*Description about yourself\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: des,\n    onChange: event => setDes(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"Submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  })));\n}\n\nexport default FeedbackPage;","map":{"version":3,"sources":["C:/Users/flast/OneDrive/Desktop/mishaobu com/mishaobu.github.io/src/components/FeedbackPage.js"],"names":["React","useState","useEffect","config","firebase","require","jsonBody","value1","value2","FeedbackPage","data","setData","name","setName","des","setDes","shouldRender","setShouldRender","sample","submitFunc","console","log","database","ref","push","set","alert","apps","length","initializeApp","on","snapshot","state","val","map","s","index","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport config from './config.js'\r\n\r\nconst firebase = require('firebase')\r\n//firebase.initializeApp(config)\r\n\r\nlet jsonBody = {\r\n    value1: \"1\",\r\n    value2: \"2\"\r\n}\r\n\r\n// let leftBox = {\r\n//     position: 'absolute',\r\n//     marginLeft: '3%',\r\n//     width: '60%',\r\n//     border: '2px solid green'\r\n// }\r\n\r\n// const rightBox = {\r\n//     position: 'absolute',\r\n//     marginLeft: '68%',\r\n//     width: '29%',\r\n//     border: '2px solid blue'\r\n// }\r\n\r\n\r\nfunction FeedbackPage() {\r\n\r\n    const [data, setData] = useState([])\r\n    const [name, setName]=useState(\"\")\r\n    const [des, setDes]=useState(\"\")\r\n    const [shouldRender, setShouldRender] = useState(true)\r\n    const sample = ['hi', 'hello', 'hey']\r\n\r\n    jsonBody = {\r\n        data: \"1\",\r\n        data: \"2\"\r\n    }\r\n    const submitFunc = () => {\r\n        console.log(\"Clicked\")\r\n        firebase.database().ref('messages').push().set({\r\n            \"name\": name,\r\n            \"des\": des\r\n        })\r\n        setName(\"\")\r\n        setDes(\"\")\r\n        alert(\"Your Question/Comment has been received. Thank you for checking out my webpage!\")   }\r\n    //firebase.initializeApp(config)\r\n\r\n    useEffect(() => {\r\n        console.log(firebase.apps.length)\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n        }\r\n        //get a reference to the database\r\n        let ref = firebase.database().ref('data')\r\n\r\n        //retrieve its data\r\n        ref.on('value', snapshot => {\r\n            console.log(\"Inside on\")\r\n             //this is your call back function\r\n                 //state will be a JSON object after this\r\n             //set your apps state to contain this data however you like\r\n             const state = snapshot.val()\r\n             //since i use react 16, i set my state like this\r\n             //i have previously declared a state variable like this: const [data, setData] = useState([]) so that I can make the below call\r\n             setData(state)\r\n        })\r\n\r\n    }, [shouldRender]);\r\n    // do this where we submit the form: setShouldRender(!shouldRender)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Submit Feedback</h1>\r\n            <h2>\r\n                {data}\r\n            </h2>\r\n            {sample.map((s, index) => (\r\n                <p>\r\n                    {s}\r\n                </p>\r\n            ))}\r\n            <form onSubmit={submitFunc}>\r\n                        <label>\r\n                            Name\r\n                            <input type=\"text\" value={name} onChange={event => setName(event.target.value)}/>\r\n                        </label>\r\n                        <label>\r\n                            *Description about yourself\r\n                            <input type=\"text\" value={des} onChange={event => setDes(event.target.value)}/>\r\n                        </label>\r\n                        <input type=\"Submit\" value=\"Submit\"/>\r\n                    </form>\r\n        </div>\r\n    )\r\n}\r\nexport default FeedbackPage;"]},"metadata":{},"sourceType":"module"}