{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flast\\\\OneDrive\\\\Desktop\\\\mishaobu com\\\\mishaobu.github.io\\\\src\\\\components\\\\MoviePage.js\";\nimport React, { Component } from 'react';\nimport MovieBlock from \"./MovieBlock\";\nimport MovieOptions from \"./MovieOptions\"; // import Navbar from 'react-bootstrap/Navbar';\n// import Form from 'react-bootstrap/Form';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\n// import Nav from 'react-bootstrap/Nav';\n// import Button from 'react-bootstrap/Button';\n// import FormControl from 'react-bootstrap/FormControl';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport config from \"../config\";\nimport \"./FeedbackPage.css\";\n\nconst firebase = require(\"firebase\"); // API Key:\n//http://www.omdbapi.com/?apikey=3f1dca30&i=tt3896198\n\n\nexport default class MoviePage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      lists: [],\n      activeList: \"All Movies\",\n      showLists: false\n    };\n    this.handleListSelect = this.handleListSelect.bind(this);\n  }\n\n  handleListSelect(e) {\n    this.setState({\n      activeList: e.target.value\n    });\n  }\n\n  handleListSelect2(e) {\n    this.handleListSelect(e).then(() => console.log(this.state.activeList));\n  }\n\n  componentDidMount() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    let ref;\n\n    if (this.state.activeList === \"All Movies\") {\n      ref = firebase.database().ref(\"movieid\");\n    } else {\n      ref = firebase.database().ref(\"lists/\" + this.state.activeList);\n    }\n\n    ref.on(\"value\", snapshot => {\n      let newState = [];\n      const data = snapshot.val();\n\n      for (let item in data) {\n        newState.push(data[item]);\n      }\n\n      this.setState({\n        movies: newState\n      });\n    });\n    let ref2 = firebase.database().ref(\"lists\");\n    ref2.on(\"value\", snapshot => {\n      let newState = [\"All movies\"];\n      const data = snapshot.val();\n\n      for (let item in data) {\n        newState.push(data[item]);\n      }\n\n      this.setState({\n        lists: newState\n      });\n    });\n    console.log(this.state.activeList);\n  }\n\n  render() {\n    const movies = this.state.movies;\n    const showLists = this.state.showLists;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieBlockDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleListSelect2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, this.state.lists.map((list, index) => /*#__PURE__*/React.createElement(\"option\", {\n      value: list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 56\n      }\n    }, \" \", list, \" \"))), /*#__PURE__*/React.createElement(MovieOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), movies.map((movieJSON, index) => /*#__PURE__*/React.createElement(MovieBlock, {\n      key: index,\n      json: movieJSON,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    })), \";\");\n  }\n\n}","map":{"version":3,"sources":["C:/Users/flast/OneDrive/Desktop/mishaobu com/mishaobu.github.io/src/components/MoviePage.js"],"names":["React","Component","MovieBlock","MovieOptions","config","firebase","require","MoviePage","constructor","state","movies","lists","activeList","showLists","handleListSelect","bind","e","setState","target","value","handleListSelect2","then","console","log","componentDidMount","apps","length","initializeApp","ref","database","on","snapshot","newState","data","val","item","push","ref2","render","map","list","index","movieJSON"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MovieBlock from \"./MovieBlock\";\r\nimport MovieOptions from \"./MovieOptions\";\r\n\r\n// import Navbar from 'react-bootstrap/Navbar';\r\n// import Form from 'react-bootstrap/Form';\r\n// import NavDropdown from 'react-bootstrap/NavDropdown';\r\n// import Nav from 'react-bootstrap/Nav';\r\n// import Button from 'react-bootstrap/Button';\r\n// import FormControl from 'react-bootstrap/FormControl';\r\n\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nimport config from \"../config\";\r\nimport \"./FeedbackPage.css\"\r\nconst firebase = require(\"firebase\");\r\n\r\n// API Key:\r\n//http://www.omdbapi.com/?apikey=3f1dca30&i=tt3896198\r\n\r\nexport default class MoviePage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            movies: [],\r\n            lists: [],\r\n            activeList: \"All Movies\",\r\n            showLists: false\r\n        }\r\n        this.handleListSelect = this.handleListSelect.bind(this);\r\n    }\r\n\r\n    handleListSelect(e) {\r\n        this.setState({\r\n            activeList: e.target.value\r\n        });\r\n    }\r\n\r\n    handleListSelect2(e) {\r\n        this.handleListSelect(e).then(() => console.log(this.state.activeList));\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n         } \r\n         let ref;\r\n        if (this.state.activeList === \"All Movies\") {\r\n            ref = firebase.database().ref(\"movieid\");\r\n        } else {\r\n            ref = firebase.database().ref(\"lists/\" + this.state.activeList) ;\r\n        }\r\n          ref.on(\"value\", (snapshot) => {\r\n            let newState = [];\r\n            const data = snapshot.val();\r\n            for (let item in data) {\r\n              newState.push(\r\n                data[item]\r\n              );\r\n            }\r\n            this.setState({\r\n              movies: newState,\r\n            });\r\n          });\r\n\r\n          let ref2 = firebase.database().ref(\"lists\");\r\n          ref2.on(\"value\", (snapshot) => {\r\n            let newState = [\"All movies\"];\r\n            const data = snapshot.val();\r\n            for (let item in data) {\r\n              newState.push(data[item]);\r\n            }\r\n            this.setState({\r\n              lists: newState,\r\n            });\r\n          });\r\n          console.log(this.state.activeList);\r\n\r\n    }\r\n\r\n    render() {\r\n        const movies = this.state.movies;\r\n        const showLists = this.state.showLists;\r\n\r\n        return(\r\n        <div className = \"movieBlockDiv\">\r\n            {/* <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                        <NavDropdown.Divider /> \r\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    </Nav>\r\n                    <Form inline>\r\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                    <Button variant=\"outline-success\">Search</Button>\r\n                    </Form>\r\n                </Navbar.Collapse>\r\n            </Navbar> */}\r\n\r\n            <select onChange = {this.handleListSelect2}>\r\n                {this.state.lists.map((list, index) => <option value = {list}> {list} </option>)}\r\n            </select>\r\n            <MovieOptions />\r\n            {movies.map((movieJSON, index) => (\r\n            <MovieBlock key={index} json={movieJSON} />\r\n        ))};\r\n        </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}