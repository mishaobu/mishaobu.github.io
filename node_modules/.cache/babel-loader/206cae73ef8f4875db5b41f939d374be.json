{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flast\\\\OneDrive\\\\Desktop\\\\mishaobu com\\\\mishaobu.github.io\\\\src\\\\components\\\\MovieOptions.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport config from \"../config\";\n\nconst firebase = require(\"firebase\");\n\nexport default class MovieOptions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movieid: \"\",\n      time: null,\n      movieRef: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } // tt1596363\n\n\n  handleValidation() {\n    if (this.state.movieid === \"\") {\n      alert(\"ID cannot be empty.\");\n    } else if (this.state.movieid.length != 9) {\n      alert(\"ID should be 9 characters.\");\n    } else return true;\n\n    return false;\n  } //   var data = require('./data/movies.json');\n  //   data.movies.map((movieID, index) => (\n  //       axios.get('https://www.omdbapi.com/?apikey=fe15e914&i=' + movieID)\n  //           .then(response => {\n  //               this.addMovie(response.data);\n  //           })\n  //   ));\n  //Poster, Title, Director, imdbRating\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      axios.get('https://www.omdbapi.com/?apikey=fe15e914&i=' + this.state.movieid).then(response => {\n        const movieRef = firebase.database().ref(\"movieid/\" + this.state.movieid);\n        movieRef.set(response.data);\n      }).then(() => {\n        this.setState({\n          movieid: \"\",\n          time: null\n        });\n      });\n      alert(\"New movie submitted\");\n    }\n  }\n\n  componentDidMount() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \" Add Movie \"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"movieAddForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"movieid\",\n      onChange: this.handleChange,\n      value: this.state.newmovie,\n      style: {\n        textAlign: \"center\",\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/flast/OneDrive/Desktop/mishaobu com/mishaobu.github.io/src/components/MovieOptions.js"],"names":["React","Component","axios","config","firebase","require","MovieOptions","constructor","state","movieid","time","movieRef","handleChange","bind","handleSubmit","e","setState","target","name","value","handleValidation","alert","length","preventDefault","get","then","response","database","ref","set","data","componentDidMount","apps","initializeApp","render","margin","newmovie","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAIA,eAAe,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAEhDM,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,IAAI,EAAE,IAFK;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,CAAD,EAAI;AACd,SAAKC,QAAL,CAAc;AACZ,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADd,KAAd;AAGD,GAjB6C,CAmB/C;;;AACCC,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKZ,KAAL,CAAWC,OAAX,KAAuB,EAA3B,EAA+B;AAC7BY,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,KAFD,MAEO,IAAI,KAAKb,KAAL,CAAWC,OAAX,CAAmBa,MAAnB,IAA6B,CAAjC,EAAoC;AACzCD,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACA,KAFK,MAEC,OAAO,IAAP;;AACR,WAAO,KAAP;AACD,GA3B6C,CA8BhD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGEP,EAAAA,YAAY,CAACC,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACQ,cAAF;;AACA,QAAI,KAAKH,gBAAL,EAAJ,EAA6B;AAC3BlB,MAAAA,KAAK,CAACsB,GAAN,CAAU,gDAAgD,KAAKhB,KAAL,CAAWC,OAArE,EACGgB,IADH,CACQC,QAAQ,IAAI;AACd,cAAMf,QAAQ,GAAGP,QAAQ,CAACuB,QAAT,GAAoBC,GAApB,CAAwB,aAAa,KAAKpB,KAAL,CAAWC,OAAhD,CAAjB;AACAE,QAAAA,QAAQ,CAACkB,GAAT,CAAaH,QAAQ,CAACI,IAAtB;AACH,OAJH,EAIKL,IAJL,CAIU,MAAM;AACV,aAAKT,QAAL,CAAc;AACVP,UAAAA,OAAO,EAAE,EADC;AAEVC,UAAAA,IAAI,EAAE;AAFI,SAAd;AAIH,OATH;AAUAW,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;AACF;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC3B,QAAQ,CAAC4B,IAAT,CAAcV,MAAnB,EAA2B;AACvBlB,MAAAA,QAAQ,CAAC6B,aAAT,CAAuB9B,MAAvB;AACF;AACH;;AAGH+B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAM,MAAA,SAAS,EAAG,cAAlB;AAAiC,MAAA,QAAQ,EAAI,KAAKpB,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,KAAK,EAAI;AAACqB,QAAAA,MAAM,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,GADD,eAEA;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,QAAQ,EAAE,KAAKvB,YAHnB;AAII,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAW4B,QAJtB;AAKI,MAAA,KAAK,EAAI;AAACC,QAAAA,SAAS,EAAE,QAAZ;AAAsBF,QAAAA,MAAM,EAAE;AAA9B,OALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ,CAFJ,CADJ;AAiBH;;AAnF+C","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport config from \"../config\";\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\n\r\n\r\nexport default class MovieOptions extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          movieid: \"\",\r\n          time: null,\r\n          movieRef: null\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(e) {\r\n        this.setState({\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      }\r\n\r\n     // tt1596363\r\n      handleValidation() {\r\n        if (this.state.movieid === \"\") {\r\n          alert(\"ID cannot be empty.\");\r\n        } else if (this.state.movieid.length != 9) {\r\n          alert(\"ID should be 9 characters.\");\r\n         } else return true;\r\n        return false;\r\n      }\r\n    \r\n\r\n    //   var data = require('./data/movies.json');\r\n    //   data.movies.map((movieID, index) => (\r\n    //       axios.get('https://www.omdbapi.com/?apikey=fe15e914&i=' + movieID)\r\n    //           .then(response => {\r\n    //               this.addMovie(response.data);\r\n    //           })\r\n    //   ));\r\n\r\n    //Poster, Title, Director, imdbRating\r\n\r\n\r\n      handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.handleValidation()) {\r\n          axios.get('https://www.omdbapi.com/?apikey=fe15e914&i=' + this.state.movieid)\r\n            .then(response => {\r\n                const movieRef = firebase.database().ref(\"movieid/\" + this.state.movieid);\r\n                movieRef.set(response.data);\r\n            }).then(() => {\r\n                this.setState({\r\n                    movieid: \"\",\r\n                    time: null,\r\n                  });\r\n            })\r\n          alert(\"New movie submitted\");\r\n        }\r\n      }\r\n\r\n      componentDidMount() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n         } \r\n      }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1> Add Movie </h1>\r\n                <form className = \"movieAddForm\" onSubmit = {this.handleSubmit}>\r\n                    <p style = {{margin: \"auto\"}}>\r\n                    {\" \"}\r\n                    <input\r\n                        type=\"text\" \r\n                        name=\"movieid\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.newmovie}\r\n                        style = {{textAlign: \"center\", margin: \"auto\"}}\r\n                    />\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}