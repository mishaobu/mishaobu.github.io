{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flast\\\\OneDrive\\\\Desktop\\\\mishaobu com\\\\mishaobu.github.io\\\\src\\\\components\\\\FeedbackPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport config from './config.js';\nimport firebase from 'firebase'; //firebase.initializeApp(config)\n\nlet testjson = {\n  value1: \"1\",\n  value2: \"2\"\n};\nexport default function FeedbackPage() {\n  const [data, setData] = useState([]);\n  const [shouldRender, setShouldRender] = useState(true);\n  const sample = ['hi', 'hello', 'hey']; //firebase.initializeApp(config)\n\n  useEffect(() => {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    let ref = firebase.database().ref('data'); //retrieve its data\n\n    ref.on('value', snapshot => {\n      //this is your call back function\n      //state will be a JSON object after this\n      //set your apps state to contain this data however you like\n      const state = snapshot.val(); //since i use react 16, i set my state like this\n      //i have previously declared a state variable like this: const [data, setData] = useState([]) so that I can make the below call\n\n      setData(state);\n    });\n  }, [shouldRender]); // do this where we submit the form: setShouldRender(!shouldRender)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Submit Feedback\"), sample.map((key, value) => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, value)), \"}\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \" \", data, \" \"));\n}","map":{"version":3,"sources":["C:/Users/flast/OneDrive/Desktop/mishaobu com/mishaobu.github.io/src/components/FeedbackPage.js"],"names":["React","useState","useEffect","config","firebase","testjson","value1","value2","FeedbackPage","data","setData","shouldRender","setShouldRender","sample","apps","length","initializeApp","ref","database","on","snapshot","state","val","map","key","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;AAEA,IAAIC,QAAQ,GAAG;AACXC,EAAAA,MAAM,EAAE,GADG;AAEXC,EAAAA,MAAM,EAAE;AAFG,CAAf;AAKA,eAAe,SAASC,YAAT,GAAwB;AAEnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAMY,MAAM,GAAG,CAAC,IAAD,EAAO,OAAP,EAAgB,KAAhB,CAAf,CAJmC,CAOnC;;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACE,QAAQ,CAACU,IAAT,CAAcC,MAAnB,EAA2B;AACvBX,MAAAA,QAAQ,CAACY,aAAT,CAAuBb,MAAvB;AACH;;AACD,QAAIc,GAAG,GAAGb,QAAQ,CAACc,QAAT,GAAoBD,GAApB,CAAwB,MAAxB,CAAV,CAJY,CAMZ;;AACAA,IAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgBC,QAAQ,IAAI;AACxB;AACI;AACJ;AACA,YAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAT,EAAd,CAJwB,CAKxB;AACA;;AACAZ,MAAAA,OAAO,CAACW,KAAD,CAAP;AACH,KARD;AASH,GAhBQ,EAgBN,CAACV,YAAD,CAhBM,CAAT,CATmC,CA0BnC;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGKE,MAAM,CAACU,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,kBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KADL,CADH,CAHL,oBAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKhB,IAAL,MAVJ,CADJ;AAcH","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport config from './config.js'\r\nimport firebase from 'firebase'\r\n\r\n//firebase.initializeApp(config)\r\n\r\nlet testjson = {\r\n    value1: \"1\",\r\n    value2: \"2\"\r\n}\r\n\r\nexport default function FeedbackPage() {\r\n\r\n    const [data, setData] = useState([])\r\n    const [shouldRender, setShouldRender] = useState(true)\r\n    const sample = ['hi', 'hello', 'hey']\r\n\r\n\r\n    //firebase.initializeApp(config)\r\n\r\n    useEffect(() => {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n        } \r\n        let ref = firebase.database().ref('data')\r\n\r\n        //retrieve its data\r\n        ref.on('value', snapshot => {\r\n            //this is your call back function\r\n                //state will be a JSON object after this\r\n            //set your apps state to contain this data however you like\r\n            const state = snapshot.val()\r\n            //since i use react 16, i set my state like this\r\n            //i have previously declared a state variable like this: const [data, setData] = useState([]) so that I can make the below call\r\n            setData(state)\r\n        })\r\n    }, [shouldRender]);\r\n    // do this where we submit the form: setShouldRender(!shouldRender)\r\n\r\n    return (\r\n        <div>\r\n            <br/><br/>\r\n            <h1>Submit Feedback</h1>\r\n            {sample.map((key, value) => (\r\n                <p>\r\n                    {value}\r\n                </p>\r\n            ))}\r\n            {/* <button onclick = {firebase.database().ref('data').push().set(jsonBody)} /> */}\r\n}\r\n            <p> {data} </p>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}