{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flast\\\\OneDrive\\\\Desktop\\\\mishaobu com\\\\mishaobu.github.io\\\\src\\\\components\\\\MovieOptions.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nconst firebase = require(\"firebase\");\n\nexport default class MovieOptions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movieid: \"\",\n      time: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } // tt1596363\n\n\n  handleValidation() {\n    if (this.state.movieid === \"\") {\n      alert(\"ID cannot be empty.\");\n    } else if (this.state.movieid.length != 10) {\n      alert(\"ID should be 10 characters.\");\n    } else return true;\n\n    return false;\n  } //   var data = require('./data/movies.json');\n  //   data.movies.map((movieID, index) => (\n  //       axios.get('https://www.omdbapi.com/?apikey=fe15e914&i=' + movieID)\n  //           .then(response => {\n  //               this.addMovie(response.data);\n  //           })\n  //   ));\n  //Poster, Title, Director, imdbRating\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      axios.get('https://www.omdbapi.com/?apikey=fe15e914&i=' + this.state.movieid).then(response => {\n        const itemsRef = firebase.database().ref(\"movieid\");\n        itemsRef.push(response.data);\n      });\n      this.setState({\n        movieid: \"\",\n        time: null\n      });\n      alert(\"New movie submitted\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \" Add Movie \"), /*#__PURE__*/React.createElement(\"form\", {\n      id: \"movieAddForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"movieID\",\n      onChange: this.handleChange,\n      value: this.state.newmovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/flast/OneDrive/Desktop/mishaobu com/mishaobu.github.io/src/components/MovieOptions.js"],"names":["React","Component","axios","firebase","require","MovieOptions","constructor","state","movieid","time","handleChange","bind","handleSubmit","e","setState","target","name","value","handleValidation","alert","length","preventDefault","get","then","response","itemsRef","database","ref","push","data","render","newmovie"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAIA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAEhDK,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,CAAD,EAAI;AACd,SAAKC,QAAL,CAAc;AACZ,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADd,KAAd;AAGD,GAhB6C,CAkB/C;;;AACCC,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKX,KAAL,CAAWC,OAAX,KAAuB,EAA3B,EAA+B;AAC7BW,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,KAFD,MAEO,IAAI,KAAKZ,KAAL,CAAWC,OAAX,CAAmBY,MAAnB,IAA6B,EAAjC,EAAqC;AAC1CD,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACA,KAFK,MAEC,OAAO,IAAP;;AACR,WAAO,KAAP;AACD,GA1B6C,CA6BhD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGEP,EAAAA,YAAY,CAACC,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACQ,cAAF;;AACA,QAAI,KAAKH,gBAAL,EAAJ,EAA6B;AAE3BhB,MAAAA,KAAK,CAACoB,GAAN,CAAU,gDAAgD,KAAKf,KAAL,CAAWC,OAArE,EACGe,IADH,CACQC,QAAQ,IAAI;AACd,cAAMC,QAAQ,GAAGtB,QAAQ,CAACuB,QAAT,GAAoBC,GAApB,CAAwB,SAAxB,CAAjB;AACAF,QAAAA,QAAQ,CAACG,IAAT,CAAcJ,QAAQ,CAACK,IAAvB;AACH,OAJH;AAKA,WAAKf,QAAL,CAAc;AACZN,QAAAA,OAAO,EAAE,EADG;AAEZC,QAAAA,IAAI,EAAE;AAFM,OAAd;AAIAU,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;AACF;;AAGHW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAM,MAAA,EAAE,EAAG,cAAX;AAA0B,MAAA,QAAQ,EAAI,KAAKlB,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,GADD,eAEA;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,QAAQ,EAAE,KAAKF,YAHnB;AAII,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWwB,QAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ,CAFJ,CADJ;AAgBH;;AA3E+C","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nconst firebase = require(\"firebase\");\r\n\r\n\r\n\r\nexport default class MovieOptions extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          movieid: \"\",\r\n          time: null,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(e) {\r\n        this.setState({\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      }\r\n\r\n     // tt1596363\r\n      handleValidation() {\r\n        if (this.state.movieid === \"\") {\r\n          alert(\"ID cannot be empty.\");\r\n        } else if (this.state.movieid.length != 10) {\r\n          alert(\"ID should be 10 characters.\");\r\n         } else return true;\r\n        return false;\r\n      }\r\n    \r\n\r\n    //   var data = require('./data/movies.json');\r\n    //   data.movies.map((movieID, index) => (\r\n    //       axios.get('https://www.omdbapi.com/?apikey=fe15e914&i=' + movieID)\r\n    //           .then(response => {\r\n    //               this.addMovie(response.data);\r\n    //           })\r\n    //   ));\r\n\r\n    //Poster, Title, Director, imdbRating\r\n\r\n\r\n      handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.handleValidation()) {\r\n            \r\n          axios.get('https://www.omdbapi.com/?apikey=fe15e914&i=' + this.state.movieid)\r\n            .then(response => {\r\n                const itemsRef = firebase.database().ref(\"movieid\");\r\n                itemsRef.push(response.data)\r\n            })\r\n          this.setState({\r\n            movieid: \"\",\r\n            time: null,\r\n          });\r\n          alert(\"New movie submitted\");\r\n        }\r\n      }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1> Add Movie </h1>\r\n                <form id = \"movieAddForm\" onSubmit = {this.handleSubmit}>\r\n                    <p>\r\n                    {\" \"}\r\n                    <input\r\n                        type=\"text\" \r\n                        name=\"movieID\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.newmovie}\r\n                    />\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}