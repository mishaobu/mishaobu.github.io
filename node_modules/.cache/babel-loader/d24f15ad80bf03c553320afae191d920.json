{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flast\\\\OneDrive\\\\Desktop\\\\mishaobu com\\\\mishaobu.github.io\\\\src\\\\components\\\\FeedbackPage.js\";\nimport React, { Component } from \"react\";\nimport config from \"../config\";\nimport \"./FeedbackPage.css\";\n\nconst firebase = require(\"firebase\");\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      desc: \"\",\n      message: \"\",\n      visible: null,\n      email: \"\",\n      time: null,\n      display: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleValidation() {\n    if (this.state.name === \"\") {\n      alert(\"Name cannot be empty.\");\n    } else if (this.state.name.length < 5) {\n      alert(\"Your name must be longer than 5 letters.\");\n    } else if (this.state.name.length > 19) {\n      alert(\"Your name must be shorter than 20 letters.\");\n    } else if (this.state.message.length < 15) {\n      alert(\"Your message must be longer than 15 characters.\");\n    } else if (this.state.message.length > 500) {\n      alert(\"Your message must be shorter than 500 characters.\");\n    } else if (this.state.private === null) {\n      alert(\"Choose whether message will be private or public.\");\n    } else return true;\n\n    return false;\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      const itemsRef = firebase.database().ref(\"messages\");\n      const item = {\n        name: this.state.name,\n        desc: this.state.desc,\n        message: this.state.message,\n        visible: this.state.visible,\n        email: this.state.email,\n        time: Date(firebase.database.ServerValue.TIMESTAMP)\n      };\n      itemsRef.push(item);\n      this.setState({\n        name: \"\",\n        desc: \"\",\n        message: \"\",\n        email: \"\",\n        time: null\n      });\n      alert(\"Form submitted\");\n    }\n  }\n\n  componentDidMount() {\n    firebase.initializeApp(config);\n    let ref = firebase.database().ref(\"messages\");\n    ref.on(\"value\", snapshot => {\n      let newState = [];\n      const data = snapshot.val();\n\n      for (let item in data) {\n        newState.push({\n          id: item,\n          name: data[item].username,\n          desc: data[item].desc,\n          message: data[item].message,\n          visible: data[item].visible,\n          email: data[item].email,\n          time: data[item].time\n        });\n      }\n\n      this.setState({\n        display: newState\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    //only call set state here if it is wrapped in a condition\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n    if (this.state.shouldUpdate !== prevState.shouldUpdate) {//same code as above to retrieve the data\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"myForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \" \", \"Log Your Visit! \", this.state.username, \" \", this.state.age), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \" \", \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handleChange,\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \" \", \"Description:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"desc\",\n      onChange: this.handleChange,\n      value: this.state.desc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \" \", \"Message:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"message\",\n      onChange: this.handleChange,\n      value: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, \"Make message visible to other guests? \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 64\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"yes\",\n      name: \"visible\",\n      onChange: this.handleChange,\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 24\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"no\",\n      name: \"visible\",\n      onChange: this.handleChange,\n      value: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 12\n      }\n    }, \"No\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \" \", \"Email (Optional):\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      onChange: this.handleChange,\n      value: this.state.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"displayResponses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"entry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, this.state.display.map(item => {\n      if (item.visible === \"false\") {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }\n        }, item.time), /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }\n        }, item.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }\n        }, item.desc), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }\n        }, \"Message: \", item.message));\n      }\n    })))) // <div className='app'>\n    // \t<div className='container'>\n    //       \t<div className='add-item'>\n    //       \t\t<h2 align='center'> Enter Messages Here</h2>\n    //           \t\t<form onSubmit={this.handleSubmit}>\n    // \t                <input type=\"text\" name=\"name\" placeholder=\"What's your name?\" onChange={this.handleChange} value={this.state.name}/>\n    // \t                <input type=\"text\" name=\"description\" placeholder=\"Give a short description of yourself.\" onChange={this.handleChange} value={this.state.description}/>\n    // \t                <input type=\"text\" name=\"message\" placeholder=\"What do you have to say?\" onChange={this.handleChange} value={this.state.message}/>\n    // \t                <p>Would you like your message to be private?</p>\n    // \t                <input type=\"radio\" id=\"yes\" name=\"private\" onChange={this.handleChange} value={true}/>\n    // \t                <label for=\"yes\">Yes</label>\n    // \t\t\t\t\t<input type=\"radio\" id=\"no\" name=\"private\" onChange={this.handleChange} value={false}/>\n    // \t\t\t\t\t<label for=\"no\">No</label>\n    // \t                <input type=\"email\" name=\"email\" placeholder=\"If you want to be contacted, what's your email?\" onChange={this.handleChange} value={this.state.email} />\n    // \t                <button>Send Message</button>\n    //           \t\t</form>\n    //       \t</div>\n    //   \t<div className='display-item'>\n    //     \t<div className='wrapper'>\n    //       \t\t<ul className='entry'>\n    //           \t\t{this.state.display.map((item) => {\n    //           \t\t\tif (item.private === \"false\") {\n    // \t\t\t        return (\n    // \t\t\t          <li key={item.id}>\n    // \t\t\t          \t<p>{item.time}</p>\n    // \t\t\t            <h3>{item.name}</h3>\n    // \t\t\t\t        <p>{item.description}</p>\n    // \t\t\t            <p>Message: {item.message}</p>\n    // \t\t\t          </li>\n    // \t\t\t        )\n    // \t\t\t      }})}\n    //       \t\t</ul>\n    //     \t</div>\n    //   \t</div>\n    // \t</div>\n    // </div>\n    ;\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/flast/OneDrive/Desktop/mishaobu com/mishaobu.github.io/src/components/FeedbackPage.js"],"names":["React","Component","config","firebase","require","Form","constructor","state","name","desc","message","visible","email","time","display","handleChange","bind","handleSubmit","e","setState","target","value","handleValidation","alert","length","private","preventDefault","itemsRef","database","ref","item","Date","ServerValue","TIMESTAMP","push","componentDidMount","initializeApp","on","snapshot","newState","data","val","id","username","componentDidUpdate","prevProps","prevState","shouldUpdate","render","age","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport config from \"../config\";\r\nimport \"./FeedbackPage.css\"\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nclass Form extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      desc: \"\",\r\n      message: \"\",\r\n      visible: null,\r\n      email: \"\",\r\n      time: null,\r\n      display: [],\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleValidation() {\r\n    if (this.state.name === \"\") {\r\n      alert(\"Name cannot be empty.\");\r\n    } else if (this.state.name.length < 5) {\r\n      alert(\"Your name must be longer than 5 letters.\");\r\n    } else if (this.state.name.length > 19) {\r\n      alert(\"Your name must be shorter than 20 letters.\");\r\n    } else if (this.state.message.length < 15) {\r\n      alert(\"Your message must be longer than 15 characters.\");\r\n    } else if (this.state.message.length > 500) {\r\n      alert(\"Your message must be shorter than 500 characters.\");\r\n    } else if (this.state.private === null) {\r\n      alert(\"Choose whether message will be private or public.\");\r\n    } else return true;\r\n    return false;\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.handleValidation()) {\r\n      const itemsRef = firebase.database().ref(\"messages\");\r\n      const item = {\r\n        name: this.state.name,\r\n        desc: this.state.desc,\r\n        message: this.state.message,\r\n        visible: this.state.visible,\r\n        email: this.state.email,\r\n        time: Date(firebase.database.ServerValue.TIMESTAMP),\r\n      };\r\n      itemsRef.push(item);\r\n      this.setState({\r\n        name: \"\",\r\n        desc: \"\",\r\n        message: \"\",\r\n        email: \"\",\r\n        time: null,\r\n      });\r\n      alert(\"Form submitted\");\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.initializeApp(config);\r\n    let ref = firebase.database().ref(\"messages\");\r\n    ref.on(\"value\", (snapshot) => {\r\n      let newState = [];\r\n      const data = snapshot.val();\r\n      for (let item in data) {\r\n        newState.push({\r\n          id: item,\r\n          name: data[item].username,\r\n          desc: data[item].desc,\r\n          message: data[item].message,\r\n          visible: data[item].visible,\r\n          email: data[item].email,\r\n          time: data[item].time,\r\n        });\r\n      }\r\n      this.setState({\r\n        display: newState,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //only call set state here if it is wrapped in a condition\r\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\r\n    if (this.state.shouldUpdate !== prevState.shouldUpdate) {\r\n      //same code as above to retrieve the data\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"mainForm\">\r\n          <form id=\"myForm\" onSubmit = {this.handleSubmit}>\r\n            <h1>\r\n              {\" \"}\r\n              Log Your Visit! {this.state.username} {this.state.age}\r\n            </h1>\r\n            <p>\r\n              {\" \"}\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={this.handleChange}\r\n                value={this.state.name}\r\n              />{\" \"}\r\n            </p>\r\n\r\n            <p>\r\n              {\" \"}\r\n              Description:\r\n              <input\r\n                type=\"text\"\r\n                name=\"desc\"\r\n                onChange={this.handleChange}\r\n                value={this.state.desc}\r\n              />{\" \"}\r\n            </p>\r\n\r\n            <p>\r\n              {\" \"}\r\n              Message:\r\n              <input\r\n                type=\"text\"\r\n                name=\"message\"\r\n                onChange={this.handleChange}\r\n                value={this.state.message}\r\n              />{\" \"}\r\n            </p>\r\n{/* \r\n            <p>\r\n              Make message visible to other guests?\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"visible\"\r\n                onChange={this.handleChange}\r\n                value={this.state.visible}\r\n              />{\" \"}\r\n            </p> */}\r\n\r\n     \t                <p>Make message visible to other guests? <br/>\r\n      \t                <input type=\"radio\" id=\"yes\" name=\"visible\" onChange={this.handleChange} value={true}/>\r\n      \t                <label for=\"yes\">Yes</label>\r\n      \t\t\t\t\t<input type=\"radio\" id=\"no\" name=\"visible\" onChange={this.handleChange} value={false}/>\r\n      \t\t\t\t\t<label for=\"no\">No</label>\r\n                        </p>\r\n\r\n            <p>\r\n              {\" \"}\r\n              Email (Optional):\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                onChange={this.handleChange}\r\n                value={this.state.email}\r\n              />{\" \"}\r\n            </p>\r\n            <button>\r\n            \r\n            Submit\r\n          </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"displayResponses\">\r\n          <ul className=\"entry\">\r\n            {this.state.display.map((item) => {\r\n              if (item.visible === \"false\") {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <p>{item.time}</p>\r\n                    <h3>{item.name}</h3>\r\n                    <p>{item.desc}</p>\r\n                    <p>Message: {item.message}</p>\r\n                  </li>\r\n                );\r\n              }\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </>\r\n\r\n      // <div className='app'>\r\n      // \t<div className='container'>\r\n      //       \t<div className='add-item'>\r\n      //       \t\t<h2 align='center'> Enter Messages Here</h2>\r\n      //           \t\t<form onSubmit={this.handleSubmit}>\r\n      // \t                <input type=\"text\" name=\"name\" placeholder=\"What's your name?\" onChange={this.handleChange} value={this.state.name}/>\r\n      // \t                <input type=\"text\" name=\"description\" placeholder=\"Give a short description of yourself.\" onChange={this.handleChange} value={this.state.description}/>\r\n      // \t                <input type=\"text\" name=\"message\" placeholder=\"What do you have to say?\" onChange={this.handleChange} value={this.state.message}/>\r\n      // \t                <p>Would you like your message to be private?</p>\r\n      // \t                <input type=\"radio\" id=\"yes\" name=\"private\" onChange={this.handleChange} value={true}/>\r\n      // \t                <label for=\"yes\">Yes</label>\r\n      // \t\t\t\t\t<input type=\"radio\" id=\"no\" name=\"private\" onChange={this.handleChange} value={false}/>\r\n      // \t\t\t\t\t<label for=\"no\">No</label>\r\n      // \t                <input type=\"email\" name=\"email\" placeholder=\"If you want to be contacted, what's your email?\" onChange={this.handleChange} value={this.state.email} />\r\n      // \t                <button>Send Message</button>\r\n      //           \t\t</form>\r\n      //       \t</div>\r\n      //   \t<div className='display-item'>\r\n      //     \t<div className='wrapper'>\r\n      //       \t\t<ul className='entry'>\r\n      //           \t\t{this.state.display.map((item) => {\r\n      //           \t\t\tif (item.private === \"false\") {\r\n      // \t\t\t        return (\r\n      // \t\t\t          <li key={item.id}>\r\n      // \t\t\t          \t<p>{item.time}</p>\r\n      // \t\t\t            <h3>{item.name}</h3>\r\n      // \t\t\t\t        <p>{item.description}</p>\r\n      // \t\t\t            <p>Message: {item.message}</p>\r\n      // \t\t\t          </li>\r\n      // \t\t\t        )\r\n      // \t\t\t      }})}\r\n      //       \t\t</ul>\r\n      //     \t</div>\r\n      //   \t</div>\r\n      // \t</div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}