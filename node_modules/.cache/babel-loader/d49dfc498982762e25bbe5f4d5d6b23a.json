{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flast\\\\OneDrive\\\\Desktop\\\\mishaobu com\\\\mishaobu.github.io\\\\src\\\\components\\\\MovieBlock.js\";\nimport React, { Component } from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport config from \"../config\";\n\nconst firebase = require(\"firebase\");\n\nexport default class MovieBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.state = {\n      data: [],\n      isOpen: false,\n      toolbarButtons: [/*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleDeleteClick,\n        type: \"button\",\n        value: \"delete\",\n        className: \"deleteMovieButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 28\n        }\n      }, \" Delete Movie \")]\n    };\n  }\n\n  componentDidMount() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    for (let item in this.props.lists) {\n      if (!this.props.json.Lists.includes(item)) {\n        let addToList = [/*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.handleListClick,\n          type: \"button\",\n          value: \"list\",\n          list: item,\n          className: \"deleteMovieButton\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }\n        }, \" Add to \", item, \" \")];\n        this.setState({\n          toolbarButtons: this.state.toolbarButtons.concat(addToList)\n        });\n      } //console.log(item, this.props.json);\n\n    } //console.log(this.props.lists);\n\n  }\n\n  handleListClick(e) {\n    let newLists = this.props.json.Lists.concat(e.target.list);\n    var updates = {};\n    updates['movieid/' + this.props.json.imdbID] = newLists;\n    firebase.database().ref(\"movieid/\" + this.props.json.imdbID).update(updates);\n    alert(this.props.json.Title + \" has been added to \" + e.target.list);\n  }\n\n  handleDeleteClick() {\n    let ref = firebase.database().ref(\"movieid\");\n    ref.child(this.props.json.imdbID).remove();\n    alert(this.props.json.Title + \" has been deleted.\");\n  } //Poster, Title, Director, imdbRating\n\n\n  render() {\n    const isOpen = this.state.isOpen;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"movieBlock\",\n      src: this.props.json.Poster,\n      onClick: () => this.setState({\n        isOpen: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }), isOpen && /*#__PURE__*/React.createElement(Lightbox, {\n      mainSrc: this.props.json.Poster,\n      imageTitle: this.props.json.Title,\n      imageCaption: \"Directed by: \" + this.props.json.Director + '   ' + \"|  IMDB Rating: \" + this.props.json.imdbRating,\n      onCloseRequest: () => this.setState({\n        isOpen: false\n      }) //toolbarButtons = {[<button onClick = {this.handleDeleteClick} type = \"button\" value = \"delete\" className = \"deleteMovieButton\"> Delete Movie </button>]}\n      ,\n      toolbarButtons: this.state.toolbarButtons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/flast/OneDrive/Desktop/mishaobu com/mishaobu.github.io/src/components/MovieBlock.js"],"names":["React","Component","Lightbox","config","firebase","require","MovieBlock","constructor","props","handleDeleteClick","bind","state","data","isOpen","toolbarButtons","componentDidMount","apps","length","initializeApp","item","lists","json","Lists","includes","addToList","handleListClick","setState","concat","e","newLists","target","list","updates","imdbID","database","ref","update","alert","Title","child","remove","render","Poster","Director","imdbRating"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nimport config from \"../config\";\r\nconst firebase = require(\"firebase\");\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class MovieBlock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n        this.state = { \r\n          data: [],\r\n          isOpen: false,\r\n          toolbarButtons: [<button onClick = {this.handleDeleteClick} type = \"button\" value = \"delete\" className = \"deleteMovieButton\"> Delete Movie </button>]\r\n        };\r\n      }\r\n\r\n      componentDidMount() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n          } \r\n          for (let item in this.props.lists) {\r\n            if (!(this.props.json.Lists.includes(item))) {\r\n              let addToList =  [<button onClick = {this.handleListClick} type = \"button\" value = \"list\" list = {item} className = \"deleteMovieButton\"> Add to {item} </button>]\r\n              this.setState({\r\n                toolbarButtons: this.state.toolbarButtons.concat(addToList)\r\n              });\r\n            }\r\n            //console.log(item, this.props.json);\r\n          }\r\n          //console.log(this.props.lists);\r\n      }\r\n\r\n      handleListClick(e) {\r\n        let newLists = this.props.json.Lists.concat(e.target.list);\r\n        var updates = {}\r\n        updates['movieid/' + this.props.json.imdbID] = newLists;\r\n        firebase.database().ref(\"movieid/\" + this.props.json.imdbID).update(updates);\r\n        alert(this.props.json.Title + \" has been added to \" + e.target.list);\r\n      }\r\n\r\n      handleDeleteClick() {\r\n        let ref = firebase.database().ref(\"movieid\");\r\n        ref.child(this.props.json.imdbID).remove();\r\n        alert(this.props.json.Title + \" has been deleted.\");\r\n      }\r\n\r\n\r\n//Poster, Title, Director, imdbRating\r\n    render() {\r\n       const isOpen = this.state.isOpen;\r\n        return (\r\n            <div>\r\n              <img className = \"movieBlock\" src = {this.props.json.Poster} onClick = {() => this.setState({isOpen: true})}></img>\r\n            {isOpen && (\r\n              <Lightbox mainSrc = {this.props.json.Poster} \r\n               imageTitle = {this.props.json.Title} \r\n               imageCaption = {\"Directed by: \" + this.props.json.Director + '   ' + \"|  IMDB Rating: \" + this.props.json.imdbRating} \r\n               onCloseRequest={() => this.setState({ isOpen: false })}\r\n               //toolbarButtons = {[<button onClick = {this.handleDeleteClick} type = \"button\" value = \"delete\" className = \"deleteMovieButton\"> Delete Movie </button>]}\r\n               toolbarButtons = {this.state.toolbarButtons}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}