{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flast\\\\OneDrive\\\\Desktop\\\\mishaobu com\\\\mishaobu.github.io\\\\src\\\\components\\\\FeedbackPage.js\";\nimport React, { Component } from 'react';\nimport config from './config.js';\n\nconst firebase = require('firebase');\n\nexport default function FeedbackPage() {\n  const [data, setData] = useState([]);\n  const [shouldRender, setShouldRender] = useState(true);\n  useEffect(() => {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    let ref = firebase.database().ref('data'); //retrieve its data\n\n    ref.on('value', snapshot => {\n      //this is your call back function\n      //state will be a JSON object after this\n      //set your apps state to contain this data however you like\n      const state = snapshot.val(); //since i use react 16, i set my state like this\n      //i have previously declared a state variable like this: const [data, setData] = useState([]) so that I can make the below call\n\n      setData(state);\n    });\n  }, [shouldRender]); // do this where we submit the form: setShouldRender(!shouldRender)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Submit Feedback\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \" \", data, \" \"));\n}","map":{"version":3,"sources":["C:/Users/flast/OneDrive/Desktop/mishaobu com/mishaobu.github.io/src/components/FeedbackPage.js"],"names":["React","Component","config","firebase","require","FeedbackPage","data","setData","useState","shouldRender","setShouldRender","useEffect","apps","length","initializeApp","ref","database","on","snapshot","state","val"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,eAAe,SAASC,YAAT,GAAwB;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCF,QAAQ,CAAC,IAAD,CAAhD;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACR,QAAQ,CAACS,IAAT,CAAcC,MAAnB,EAA2B;AACvBV,MAAAA,QAAQ,CAACW,aAAT,CAAuBZ,MAAvB;AACH;;AACD,QAAIa,GAAG,GAAGZ,QAAQ,CAACa,QAAT,GAAoBD,GAApB,CAAwB,MAAxB,CAAV,CAJY,CAMZ;;AACAA,IAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgBC,QAAQ,IAAI;AACxB;AACI;AACJ;AACA,YAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAT,EAAd,CAJwB,CAKxB;AACA;;AACAb,MAAAA,OAAO,CAACY,KAAD,CAAP;AACH,KARD;AASH,GAhBQ,EAgBN,CAACV,YAAD,CAhBM,CAAT,CAJmC,CAqBnC;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKH,IAAL,MAHJ,CADJ;AAOH","sourcesContent":["import React, { Component } from 'react';\r\nimport config from './config.js'\r\nconst firebase = require('firebase');\r\n\r\nexport default function FeedbackPage() {\r\n    const [data, setData] = useState([])\r\n    const [shouldRender, setShouldRender] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config)\r\n        } \r\n        let ref = firebase.database().ref('data')\r\n\r\n        //retrieve its data\r\n        ref.on('value', snapshot => {\r\n            //this is your call back function\r\n                //state will be a JSON object after this\r\n            //set your apps state to contain this data however you like\r\n            const state = snapshot.val()\r\n            //since i use react 16, i set my state like this\r\n            //i have previously declared a state variable like this: const [data, setData] = useState([]) so that I can make the below call\r\n            setData(state)\r\n        })\r\n    }, [shouldRender])\r\n    // do this where we submit the form: setShouldRender(!shouldRender)\r\n\r\n    return (\r\n        <div>\r\n        <br/><br/>\r\n        <h1>Submit Feedback</h1>\r\n            <p> {data} </p>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}